// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             Int
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       Int
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            Int         @id @default(autoincrement())
  orders        Order[]
  favorites     Favorites[]
  firstname     String
  surname       String
  email         String?     @unique
  emailVerified DateTime?
  password      String?
  photo         String?     @default("https://cdn-icons-png.flaticon.com/512/456/456212.png")
  photoKey      String?
  street        String?
  city          String?
  state         String?
  postcode      String?
  country       String?
  phone         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model Brand {
  id          Int         @id @default(autoincrement())
  products    Product[]
  OrderItem   OrderItem[]
  Favorites   Favorites[]
  title       String
  description String?
  logo        String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
}

model Category {
  id              Int               @id @default(autoincrement())
  ProductCategory ProductCategory[]
  name            String
  description     String?
  logo            String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
}

model Product {
  id               Int               @id @default(autoincrement())
  brand            Brand             @relation(fields: [brandId], references: [id])
  brandId          Int
  categories       ProductCategory[]
  orders           OrderItem[]
  favorites        Favorites[]
  title            String            @unique
  sku              String            @unique @default(cuid())
  shortDescription String?
  description      String?
  price            Decimal?
  discount         Decimal?          @default(0.00)
  stock            Int?
  rating           Decimal?
  featured         Boolean           @default(false)
  cart_limit       Int?
  attributes       String?
  specifications   String?
  thumbnail        String?
  images           String?
  itemType         String            @default("box") // bag, box, carton, crate, document, drum, envelop, item, jif, pallet, pieces, roll, satchel, skid
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt
}

model ProductCategory {
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}

model Order {
  id          Int         @id @default(autoincrement())
  users       User?       @relation(fields: [userId], references: [id])
  userId      Int?
  items       OrderItem[]
  paymentType String
  lastDigits  String
  status      String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
}

model OrderItem {
  orderId       Int
  order         Order    @relation(fields: [orderId], references: [id])
  productId     Int
  product       Product  @relation(fields: [productId], references: [id])
  brandId       Int
  brand         Brand    @relation(fields: [brandId], references: [id])
  name          String
  sku           String
  price         Decimal?
  delivery      String?
  deliveryPrice Decimal? @default(0.00)
  discount      Decimal? @default(0.00)
  quantity      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt

  @@id([orderId, productId])
}

model Favorites {
  id        Int      @id @default(autoincrement())
  users     User?    @relation(fields: [userId], references: [id])
  userId    Int
  products  Product  @relation(fields: [productId], references: [id])
  productId Int
  brands    Brand    @relation(fields: [brandId], references: [id])
  brandId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([userId, productId])
}

model Countries {
  id         Int      @id @default(autoincrement())
  country    String?
  alphaCode  String?
  numberCode String?
  states     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}
